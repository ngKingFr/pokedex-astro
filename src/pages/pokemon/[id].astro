---
import Layout from "../../layouts/Layout.astro";
import Element from "../../components/Element.astro";
import { Image } from "@astrojs/image/components";
import type { Pokemon } from "../../models/pokemon";
import {
  getPokemonById,
  getAllPokemon,
  getImgPokemon,
} from "../../services/pokedex";
export async function getStaticPaths() {
  const list = await getAllPokemon();
  return list.map((p) => ({ params: { id: p.id.toString() } }));
}
const { id } = Astro.params;

const pokemon: Pokemon = await getPokemonById(+id);
const { name, type, base } = pokemon;
const imgSrc = getImgPokemon(+id);

const bases = [];
Object.entries(base).forEach((base) => {
  bases.push({ name: base[0], value: base[1] });
});
---

<Layout title={name.french.toLocaleUpperCase()}>
  <div class="max-w-6xl w-full mx-auto mt-10">
    <div class="card rounded-lg p-8 bg-white shadow">
      <div class="flex flex-col md:flex-row justify-between w-full gap-8">
        <div
          class="flex flex-col w-full md:w-1/3 bg-red-50 rounded shadow p-4 items-center justify-start"
        >
          <h1 class="text-4xl font-bold capitalize mb-4">
            {name.french}
          </h1>
          {
            imgSrc && (
              <Image
                format="png"
                alt={name.french}
                width="140"
                height="140"
                src={imgSrc}
                decoding="async"
                loading="lazy"
              />
            )
          }
          <div class="inline-flex items-center gap-3 mt-6">
            {type.map((tp) => <Element element={tp.toLowerCase()} />)}
          </div>
        </div>

        <div class="flex flex-col gap-6 w-full">
          <div class="flex flex-col gap-2">
            <b class="text-xl">Stats de base</b>
            <div class="bg-blue-100 bg-opacity-50 w-full p-2 rounded-md">
              <ul class="grid grid-cols-2 md:grid-cols-3 gap-x-2 gap-y-4 ml-5">
                {
                  bases.map((base) => (
                    <li class="flex flex-col">
                      <b class="capitalize">{base.name}</b>
                      <span class="tabular-nums">{base.value}</span>
                    </li>
                  ))
                }
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>

    <style>
      .card {
        border-color: var(--color-border);
      }
    </style>
  </div>
</Layout>
